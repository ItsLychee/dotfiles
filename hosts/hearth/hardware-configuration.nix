# Do not modify this file!  It was generated by ‘nixos-generate-config’ and may be overwritten by future invocations.  Please make changes to /etc/nixos/configuration.nix instead.
{ config, lib, modulesPath, ...
}: {
  imports = [ (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usbhid" "usb_storage" "sd_mod" "sr_mod"
  ]; boot.initrd.kernelModules = [
    "dm-snapshot" "dm-mod" "dm-cache" "dm-cache-default"
    
  ]; boot.initrd.services.lvm.enable = true; boot.kernelModules = ["kvm-amd"]; boot.extraModulePackages = [];

  services.lvm.boot = { thin.enable = true; vdo.enable = true;
  };

  fileSystems = { "/" = {
      device = "/dev/disk/by-uuid/58a96bbe-4ad2-4d68-bdc6-eb5f9d946db0"; fsType = "btrfs"; options = ["subvol=root"];
    };
    "/nix" = { device = "/dev/disk/by-uuid/58a96bbe-4ad2-4d68-bdc6-eb5f9d946db0"; fsType = "btrfs"; options = ["subvol=nix"];
    };
    "/var/lib" = { device = "/dev/disk/by-uuid/58a96bbe-4ad2-4d68-bdc6-eb5f9d946db0"; fsType = "btrfs"; options = ["subvol=state"];
    };
    "/home" = { device = "/dev/disk/by-uuid/58a96bbe-4ad2-4d68-bdc6-eb5f9d946db0"; fsType = "btrfs"; options = ["subvol=home"];
    };
    "/boot" = { device = "/dev/disk/by-uuid/3DAE-3070"; fsType = "vfat"; options = ["fmask=0022" "dmask=0022"];
    };
  };
  swapDevices = [ {device = "/dev/disk/by-uuid/466163f0-8477-4f8a-b6b2-63a91c937db4";}
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking (the default) this is the recommended approach. When using systemd-networkd it's still possible to use this option, but it's recommended to use 
  # it in conjunction with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp10s0.useDHCP = lib.mkDefault true; networking.interfaces.wlp9s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux"; hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
